---
##########################################
# [3-Tier Architecture 구현]
# Play1: web-PHP-DB구현
# 1. 웹서버 + 방화벽 설정
# 1) WEB 패키지 설치
# 2) WEB서비스 설정
# 3) WEB 서비스 기동
# 4) 방화벽 등록
# 2. DB 설정 
# 1) DB 패키지 설치
# 2) DB 서비스 기동
# 3) DB 서비스 설정
# 4) 방화벽 등록 
# PLAY2: 웹 확인
##########################################
- name: 3-Tier Architecture 구현
  hosts: webservers
  tasks: 
  # Play1: web-PHP-DB구현
  # 1. 웹서버 + 방화벽 설정
  # 1) WEB 패키지 설치
  # * 웹패키지: httpd,mod_ssl
  # * PHP 패키지: php, php-mysqlnd, php-pdo
  # * 방화벽 패키지: firewalld
    - name: 1) WEB 패키지 설치
      ansible.builtin.yum:
        name:
        - httpd
        - mod_ssl 
        - php
        - php-mysqlnd
        - php-pdo
        - firewalld
        state: present

    - name: 2) web 서비스 설정 - /var/www/html/index.php
      ansible.builtin.get_url:
        url: http://192.168.10.10/index.php
        dest: /var/www/html/index.php
        mode: '0644'
    - name: 3) 서비스 기동 - httpd, firewalld
      ansible.builtin.systemd:
        name: "{{ item }}"
        enabled: true
        state: started
      loop:
        - httpd
        - firewalld

    - name: 4) 방화벽 포트 등록 - http, https
      ansible.posix.firewalld:
        service: "{{ item }}"
        permanent: true
        immediate: true
        state: enabled
      loop:
        - http
        - https
    - name: 1) DB 패키지 설치 - mariadb, mariadb-server, python3-PyMySQL
      ansible.builtin.dnf:
        name:
          - mariadb
          - mariadb-server
          - python3-PyMySQL
        state: present
    - name: 2) DB 서비스 기동 - mariadb
      ansible.builtin.systemd:
        name: mariadb
        state: started
        enabled: true
    # - name: 3) DB 서비스 설정 - (mysql_secure_install) root 암호 설정
    #   #############################################
    #   # mysql_secure_install 스크립트
    #   # * root 암호 변경(인증방식 unix_socket)
    #   # * root 사용자 원격 접속 차단
    #   # * 익명 사용자 제거 
    #   # * test DB 제거
    #   # * 권한 적용
    #   #############################################
  # 3) 서비스 설정
    # * mysql_secure_installation
    # * 사용자추가/권한부여
    - name: 3) 서비스 설정 - mysql_secure_installation
      become: true
      ansible.builtin.expect:
        command: mysql_secure_installation
        responses:
          'Enter current password for root': ''
          'Switch to unix_socket authentication': 'Y'
          'Change the root password?': 'Y'
          'New password': 'soldesk1.'
          'Re-enter new password': 'soldesk1.'
          'Remove anonymous users': 'Y'
          'Disallow root login remotely': 'Y'
          'Remove test database and access to it': 'Y'
          'Reload privilege tables now': 'Y'
        timeout: 1

    - name: 3) 서비스 설정 - 사용자/권한 추가
      become: true
      community.mysql.mysql_user:
        login_user: root
        login_password: soldesk1.
        name: soldesk
        password: soldesk1.
        priv: '*.*:ALL'
        state: present

    # 4) 방화벽 포트 등록
    # * mysql
    - name: 4) 방화벽 포트 등록 - mysql
      ansible.posix.firewalld:
        service: mysql
        permanent: true
        immediate: true
        state: enabled

# Play 2 - 웹확인
- name: 0) 웹서버에 요청
  hosts: localhost
  become: false
  tasks:
    - name: 1) web1 웹서버에 웹요청 확인
      ansible.builtin.uri:
        url: "http://192.168.10.10/index.php"
        status_code: 200